{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "28b83200_01ede463",
        "filename": "src/systemcommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2022-04-21T18:24:08Z",
      "side": 1,
      "message": "Shouldn\u0027t this be implemented by the ssifbridge daemon, since that\u0027s what actually knows the capabilities?",
      "range": {
        "startLine": 63,
        "startChar": 50,
        "endLine": 63,
        "endChar": 80
      },
      "revId": "1a7af7fef4791d3e0f16305b2ff711d86e57338d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95f91367_17eb1eb0",
        "filename": "src/systemcommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000252
      },
      "writtenOn": "2022-07-14T06:05:06Z",
      "side": 1,
      "message": "ssifbridge daemon just acts like a bridge between kernel bmc-ssif driver and ipmid in userland to send requests and receive responses. This command as defined by IPMI 2.0 spec is used to provide the System Interface capabilities supported in this BMC then host can be aware of what are supported in this interface. For example, SSIF/KCS/SMIC, and if it\u0027s SSIF, whether Multi-part read/write supported?, maximum size of IPMI message for a transaction?, PEC supported?. I think the BMC itself should provide that information and this is the right place to put. Moreover, the command be read out-of-band, not only inband.",
      "parentUuid": "28b83200_01ede463",
      "range": {
        "startLine": 63,
        "startChar": 50,
        "endLine": 63,
        "endChar": 80
      },
      "revId": "1a7af7fef4791d3e0f16305b2ff711d86e57338d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53a26dd2_bee9b665",
        "filename": "src/systemcommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000908
      },
      "writtenOn": "2022-08-29T22:02:10Z",
      "side": 1,
      "message": "This sounds like it should be considered for phosphor-host-ipmid package. Especially if the command is ready to be out-of-band and in-band and capable of supporting multiple interfaces. Perhaps you can use an option for backwards compatibility.",
      "parentUuid": "95f91367_17eb1eb0",
      "range": {
        "startLine": 63,
        "startChar": 50,
        "endLine": 63,
        "endChar": 80
      },
      "revId": "1a7af7fef4791d3e0f16305b2ff711d86e57338d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae15e5e0_3d58d93a",
        "filename": "src/systemcommands.cpp",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1000590
      },
      "writtenOn": "2022-10-06T19:17:07Z",
      "side": 1,
      "message": "this has to be a separate IPMI library which is hosted in the SSIF bridge repo. \nAlso the problem I have with this is, the capabilities that are being presented (multi part, PEC..) here are actually controlled at the kernel driver level. \nIf kernel driver can expose these parameters in sysfs then that will be the best approach. We can have the IPMI lib in the SSIF bridge repo that reads the kernel sysfs and populates these fields.",
      "parentUuid": "53a26dd2_bee9b665",
      "range": {
        "startLine": 63,
        "startChar": 50,
        "endLine": 63,
        "endChar": 80
      },
      "revId": "1a7af7fef4791d3e0f16305b2ff711d86e57338d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}